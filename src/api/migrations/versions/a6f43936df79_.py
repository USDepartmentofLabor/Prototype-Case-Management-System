"""empty message

Revision ID: a6f43936df79
Revises: a0a6f383a912
Create Date: 2020-11-24 22:50:07.760708

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a6f43936df79'
down_revision = 'a0a6f383a912'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_case_files_created_at', table_name='case_files')
    op.drop_table('case_files')
    op.drop_index('ix_case_notes_version_created_at', table_name='case_notes_version')
    op.drop_index('ix_case_notes_version_end_transaction_id', table_name='case_notes_version')
    op.drop_index('ix_case_notes_version_operation_type', table_name='case_notes_version')
    op.drop_index('ix_case_notes_version_transaction_id', table_name='case_notes_version')
    op.drop_index('ix_case_notes_version_updated_at', table_name='case_notes_version')
    op.drop_table('case_notes_version')
    op.drop_index('ix_case_files_version_created_at', table_name='case_files_version')
    op.drop_index('ix_case_files_version_end_transaction_id', table_name='case_files_version')
    op.drop_index('ix_case_files_version_operation_type', table_name='case_files_version')
    op.drop_index('ix_case_files_version_transaction_id', table_name='case_files_version')
    op.drop_table('case_files_version')
    op.drop_index('ix_case_notes_created_at', table_name='case_notes')
    op.drop_index('ix_case_notes_updated_at', table_name='case_notes')
    op.drop_table('case_notes')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('case_notes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('case_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], name='case_notes_case_id_fkey'),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='case_notes_created_by_id_fkey'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='case_notes_updated_by_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='case_notes_pkey')
    )
    op.create_index('ix_case_notes_updated_at', 'case_notes', ['updated_at'], unique=False)
    op.create_index('ix_case_notes_created_at', 'case_notes', ['created_at'], unique=False)
    op.create_table('case_files_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('case_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('original_filename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('remote_filename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('uploaded_location_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('taken_location_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('extracted_location_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='case_files_version_pkey')
    )
    op.create_index('ix_case_files_version_transaction_id', 'case_files_version', ['transaction_id'], unique=False)
    op.create_index('ix_case_files_version_operation_type', 'case_files_version', ['operation_type'], unique=False)
    op.create_index('ix_case_files_version_end_transaction_id', 'case_files_version', ['end_transaction_id'], unique=False)
    op.create_index('ix_case_files_version_created_at', 'case_files_version', ['created_at'], unique=False)
    op.create_table('case_notes_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('case_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='case_notes_version_pkey')
    )
    op.create_index('ix_case_notes_version_updated_at', 'case_notes_version', ['updated_at'], unique=False)
    op.create_index('ix_case_notes_version_transaction_id', 'case_notes_version', ['transaction_id'], unique=False)
    op.create_index('ix_case_notes_version_operation_type', 'case_notes_version', ['operation_type'], unique=False)
    op.create_index('ix_case_notes_version_end_transaction_id', 'case_notes_version', ['end_transaction_id'], unique=False)
    op.create_index('ix_case_notes_version_created_at', 'case_notes_version', ['created_at'], unique=False)
    op.create_table('case_files',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('case_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('original_filename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('remote_filename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('uploaded_location_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('taken_location_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('extracted_location_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], name='case_files_case_id_fkey'),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='case_files_created_by_id_fkey'),
    sa.ForeignKeyConstraint(['document_id'], ['case_definition_documents.id'], name='case_files_document_id_fkey'),
    sa.ForeignKeyConstraint(['extracted_location_id'], ['locations.id'], name='case_files_extracted_location_id_fkey'),
    sa.ForeignKeyConstraint(['taken_location_id'], ['locations.id'], name='case_files_taken_location_id_fkey'),
    sa.ForeignKeyConstraint(['uploaded_location_id'], ['locations.id'], name='case_files_uploaded_location_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='case_files_pkey')
    )
    op.create_index('ix_case_files_created_at', 'case_files', ['created_at'], unique=False)
    # ### end Alembic commands ###
